# Based on: 
# https://project-renard.github.io/doc/development/meeting-log/posts/2016/05/03/windows-build-with-msys2/

image: Visual Studio 2019

environment:
  global:
  # TODO This is the Rust channel that build jobs will use by default but can be overridden on a case by case basis down below:
    RUST_VERSION: stable

    CRATE_NAME: shardoverse

  matrix:
    # MinGW
    #- TARGET: i686-pc-windows-gnu
    - TARGET: x86_64-pc-windows-gnu

    # MSVC
    #- TARGET: i686-pc-windows-msvc
    #- TARGET: x86_64-pc-windows-msvc

    # Testing other channels
    #- TARGET: x86_64-pc-windows-gnu
    #  RUST_VERSION: nightly
    #- TARGET: x86_64-pc-windows-msvc
    #  RUST_VERSION: nightly

install:
  - cmd: echo "section1 install"
  - set DIRCMD=/O:GN
  - set PATH=%PATH%;C:\msys64\mingw64\bin
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin

  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - rustc -Vv
  - cargo -V

  - '%APPVEYOR_BUILD_FOLDER%\ci\appveyor\x86_64-pc-windows-gnu_10_install.bat'
  - 'echo End intall at: & time /t'

build_script:
  - cmd: echo "section2 build_script"
  - 'echo Nothing to build'
  - '%APPVEYOR_BUILD_FOLDER%\ci\appveyor\x86_64-pc-windows-gnu_20_build.bat'
  - 'echo End intall at: & time /t'

test_script:
  - cmd: echo "section3 build_script"
  - '%APPVEYOR_BUILD_FOLDER%\ci\appveyor\x86_64-pc-windows-gnu_30_test.bat'
  - 'echo End intall at: & time /t'
  - '%APPVEYOR_BUILD_FOLDER%\ci\appveyor\test.bat'

# TODO This is the "test phase", tweak it as you see fit
# we don't run the "test phase" when doing deploys
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      cargo build --target %TARGET% &&
      cargo build --target %TARGET% --release &&
      cargo test --target %TARGET% &&
      cargo test --target %TARGET% --release &&
      cargo run --target %TARGET% &&
      cargo run --target %TARGET% --release
    )
  
 
# # Steps copied from the rust-sdl2 project:
# - wget https://www.libsdl.org/release/SDL2-2.0.10.tar.gz -O sdl2.tar.gz
# - tar xzf sdl2.tar.gz
# - pushd SDL2-* && ./configure && make && sudo make install && popd
# 
# - wget -q https://www.libsdl.org/projects/SDL_ttf/release/SDL2_ttf-2.0.14.tar.gz
# - tar xzf SDL2_ttf-*.tar.gz
# - pushd SDL2_ttf-* && ./configure && make && sudo make install && popd
# 
# - wget -q https://www.libsdl.org/projects/SDL_image/release/SDL2_image-2.0.1.tar.gz
# - tar xzf SDL2_image-*.tar.gz
# - pushd SDL2_image-* && ./configure && make && sudo make install && popd
# 
# - wget -q https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-2.0.4.tar.gz
# - tar xzf SDL2_mixer-*.tar.gz
# - pushd SDL2_mixer-* && ./configure && make && sudo make install && popd
# 
# - wget -q -O SDL2_gfx-1.0.1.tar.gz https://sourceforge.net/projects/sdl2gfx/files/SDL2_gfx-1.0.1.tar.gz/download
# - tar xzf SDL2_gfx-*.tar.gz
# - pushd SDL2_gfx-* && ./autogen.sh && ./configure && make && sudo make install && popd



cache:
  - C:\Users\appveyor\.cargo\registry
  - target

# branches:
#   only:
#     # Release tags
#     - /^v\d+\.\d+\.\d+.*$/
#     - master

notifications:
  - provider: Email
    on_build_success: false

# Building is done in the test phase, so we disable Appveyor's build phase:
build: false
