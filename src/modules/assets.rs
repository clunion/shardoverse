/*
## ---------------------------------------------------------------------------------------------------------------------------
## PROJECT:             Shardoverse
## HOME:      https://github.com/clunion/shardoverse
## ---------------------------------------------------------------------------------------------------------------------------
## FILE:     assets.rs
## SYNOPSIS: handling of the assets: preloading, dynamic loading, switching of grafics, sounds and other assets
## ---------------------------------------------------------------------------------------------------------------------------
## DESCRIPTION:
## A Roguelike Peer-to-Peer Multi Player Dungeon Explorer and Fortres Builder (?) Game written in Rust
##----------------------------------------------------------------------------------------------------------------------------
## LICENSE:
## Copyright 2020 by Christian Lunau (clunion), Julian Lunau and Jaron Lunau.
## MIT-License, see LICENSE.md file 
## ---------------------------------------------------------------------------------------------------------------------------
## VERSION:  DATE:       AUTHOR: CHANGES:
## 0.1       2020-04-04  CLu     creation
## ---------------------------------------------------------------------------------------------------------------------------
## TODO:
##    - everything
## ---------------------------------------------------------------------------------------------------------------------------
*/

//--- MODULES EXTERNAL: ------------------------------------------------------------------------------------------------------
// Extern crate declarations only in main.rs (to be reevaluated later)

//--- MODULES: ---------------------------------------------------------------------------------------------------------------
use std::io;

//--- MODULES LOCAL: ---------------------------------------------------------------------------------------------------------
//--- none ---

//--- CONSTANTS: -------------------------------------------------------------------------------------------------------------
//--- none ---

//--- TYPES: -----------------------------------------------------------------------------------------------------------------
//--- none ---

//--- ENUMS: -----------------------------------------------------------------------------------------------------------------
//--- none ---

//--- STRUCTS: ---------------------------------------------------------------------------------------------------------------
//--- none ---

//--- GLOBAL VARS: -----------------------------------------------------------------------------------------------------------
//--- none ---


/*
## ---------------------------------------------------------------------------------------------------------------------------
## FUNCTION:   pixel_fill
## TYPE:       simple local function
## ---------------------------------------------------------------------------------------------------------------------------
## PARAMETER:  canvas
## RETURNS:    Result
## ---------------------------------------------------------------------------------------------------------------------------
## DESCRIPTION:
## Test for pixel-Drawing, fills the current Window with colored pixels
## ---------------------------------------------------------------------------------------------------------------------------
## VERSION:    DATE:       AUTHOR: CHANGES:
## 1.0         2020        CLu     initial version
## ---------------------------------------------------------------------------------------------------------------------------
## TODO:     
## ---------------------------------------------------------------------------------------------------------------------------
*/
pub mod cursors
{
use super::*;

   pub fn load_cursors() -> Result<(), io::Error> 
   {
   println!("load_cursors() called");
   Ok(())
   }
}


#[cfg(test)]
mod tests 
{
  // importing names from outer (for mod tests) scope:
  use super::cursors::*;
  
  /*
  ## ---------------------------------------------------------------------------------------------------------------------------
  ## FUNCTION:   test_load_cursors()
  ## TYPE:       unit test function
  ## ---------------------------------------------------------------------------------------------------------------------------
  ## PARAMETER:  -
  ## RETURNS:    -
  ## ---------------------------------------------------------------------------------------------------------------------------
  */
  #[test]
  fn test_load_cursors() 
  {
    let result = load_cursors();
    assert!(result.is_ok());
  }
  
}


