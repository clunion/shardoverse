//! ___________________________________________________________________________________________________________________________
//! **`PROJECT:    `** Shardoverse    
//! **`HOME:       `** [Shardoverse on GitHub](https://github.com/clunion/shardoverse)    
//! **`SYNOPSIS:   `** A Roguelike Peer-to-Peer Multi Player Dungeon Explorer Game written in Rust    
//! ___________________________________________________________________________________________________________________________
//! **`FILE:       `** assets.rs ðŸ¦€   
//! **`DESCRIPTION:`** handling of the assets: preloading, dynamic loading, switching of grafics, sounds and other assets   
//! ___________________________________________________________________________________________________________________________
//! **`LICENSE:    `**   
//! Copyright 2020 by Christian Lunau (clunion), Julian Lunau (someone-out-there) and Jaron Lunau (endless-means).   
//! MIT-License, see LICENSE.md file    
//! ___________________________________________________________________________________________________________________________
//! VERSION: | DATE:      | AUTHOR:   | CHANGES:   
//! :---     | :---       | :---:     | :---   
//! 0.1      | 2020-04-04 | Clunion   | creation   
//! ___________________________________________________________________________________________________________________________
//! **`TODO:       `**   
//! * everything (nearly)
//! ___________________________________________________________________________________________________________________________
//!    

//___ MODULES EXTERNAL: _______________________________________________________________________________________________________
// Extern crate declarations only in main.rs (to be reevaluated later)

use std::io;

#[allow(unused_imports)]
use log::{trace, debug, info, warn, error};

//___ MODULES LOCAL: __________________________________________________________________________________________________________
//___ none ___

//___ CONSTANTS: ______________________________________________________________________________________________________________
//___ none ___

//___ TYPES: __________________________________________________________________________________________________________________
//___ none ___

//___ ENUMS: __________________________________________________________________________________________________________________
//___ none ___

//___ STRUCTS: ________________________________________________________________________________________________________________
//___ none ___


/// ___________________________________________________________________________________________________________________________
/// **`MODULE:     `** cursors   
/// **`TYPE:       `** public   
/// ___________________________________________________________________________________________________________________________
/// **`DESCRIPTION:`**   
///  Contains all functions for handling cursors   
/// ___________________________________________________________________________________________________________________________
pub mod cursors
{
use super::*;

/// ___________________________________________________________________________________________________________________________
/// **`FUNCTION:   `**  load   
/// **`TYPE:       `**  local, common function   
/// ___________________________________________________________________________________________________________________________
/// **`PARAMETER:  `** **` <none>        `**    
/// **`RETURNS:    `** **` Result -->    `** OK()   
/// **`            `** **`     or -->    `** Error   
/// ___________________________________________________________________________________________________________________________
/// **`DESCRIPTION:`**   
/// <textual description of the function, stating:   
///   1.: the purpose of this function (goal, WHAT shall be achieved with it)   
///   2.: the way this function works (HOW its works)>    
/// ___________________________________________________________________________________________________________________________
/// VERSION:| DATE:      | AUTHOR:   | CHANGES:   
/// :---    | :---       | :---:     | :---   
/// 0.1     | 2020-06-20 | Clunion   | initial version   
/// ___________________________________________________________________________________________________________________________
/// **`TODO:       `**   
/// * everything   
/// ___________________________________________________________________________________________________________________________

   pub fn load() -> Result<(), io::Error> 
   {
   debug!("cursors::load() called");
   Ok(())
   }

} // End of: mod cursors


/// ___________________________________________________________________________________________________________________________
/// **`TESTMODULE: `** for assets   
/// **`TYPE:       `** unit test functions   
/// ___________________________________________________________________________________________________________________________
#[cfg(test)]
mod tests 
{
  // importing names from outer (for mod tests) scope:
  use super::cursors::*;
  
  /// ___________________________________________________________________________________________________________________________
  /// **`FUNCTION:   `**  test_load()   
  /// **`TYPE:       `**  unit test function   
  /// **`TESTS:      `**  checks if load returns ok()   
  /// ___________________________________________________________________________________________________________________________

  #[test]
  fn test_load() 
  {
    let result = load();
    assert!(result.is_ok());
  }
  
} // End of: mod test



